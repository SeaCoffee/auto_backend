services:
  app:
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: on-failure
    command: >
      sh -c "python manage.py wait_db && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - db

  db:
    image: mysql:8
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    restart: on-failure

  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/client:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./storage/media:/app/storage/media

  redis:
    image: redis

  celery:
    build:
      context: .
    volumes:
      - .:/app
    env_file:
      - .env
    command: >
      sh -c "python manage.py wait_db && celery -A configs worker -l info" &
      sh -c "celery -A configs beat -l info"

    depends_on:
      - redis
      - db
    restart: on-failure

